name: Build Tkinter App

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    defaults:
      run:
        working-directory: src

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install pyinstaller
          pip install -r ../requirements.txt

      - name: Build Windows Executable
        run: pyinstaller --onefile --windowed aurachat_helper_app/main.py

      - name: List files in dist/
        run: dir dist  # Use 'ls dist' for macOS/Linux to check output

      - name: Upload Windows Build
        uses: actions/upload-artifact@v4
        with:
          name: aurachat_helper-windows
          path: dist/main.exe  # Ensure the path is correct, based on the output

  build-mac:
    runs-on: macos-latest
    defaults:
      run:
        working-directory: src

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install pyinstaller
          pip install -r ../requirements.txt

      - name: Build macOS Binary
        run: pyinstaller --onefile --windowed aurachat_helper_app/main.py

      - name: List files in dist/
        run: ls dist  # macOS/Linux command to check output

      - name: Upload macOS Build
        uses: actions/upload-artifact@v4
        with:
          name: aurachat_helper-mac
          path: dist/main  # Ensure the path is correct, based on the output

  release:
    needs: [build-windows, build-mac]
    runs-on: ubuntu-latest

    steps:
      - name: Download Windows Artifact
        uses: actions/download-artifact@v4
        with:
          name: aurachat_helper-windows
          path: ./dist/

      - name: Download macOS Artifact
        uses: actions/download-artifact@v4
        with:
          name: aurachat_helper-mac
          path: ./dist/

      - name: List files in dist/ for release
        run: ls ./dist  # Check that the files are available

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: "Aurachat Helper v0.1.2"  # Release title
          tag_name: "v0.1.2"  # Release tag name
          files: |
            dist/main.exe  # Windows artifact
            dist/main      # macOS artifact
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Token for authenticating the release
